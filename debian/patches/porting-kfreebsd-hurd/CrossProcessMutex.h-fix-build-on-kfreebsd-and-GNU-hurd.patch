From: Christoph Goehre <chris@sigxcpu.org>
Date: Tue, 31 May 2016 12:45:09 -0400
Subject: CrossProcessMutex.h: fix build on kfreebsd and GNU/hurd
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

In file included from /«PKGBUILDDIR»/obj-icedove/ipc/glue/Unified_cpp_ipc_glue0.cpp:29:0:
/«PKGBUILDDIR»/mozilla/ipc/glue/CrossProcessMutex_posix.cpp: In constructor 'mozilla::CrossProcessMutex::CrossProcessMutex(const char*)':
/«PKGBUILDDIR»/mozilla/ipc/glue/CrossProcessMutex_posix.cpp:45:7: error: class 'mozilla::CrossProcessMutex' does not have any field named 'mMutex'
     : mMutex(nullptr)
       ^
/«PKGBUILDDIR»/mozilla/ipc/glue/CrossProcessMutex_posix.cpp:46:7: error: class 'mozilla::CrossProcessMutex' does not have any field named 'mCount'
     , mCount(nullptr)
       ^
---
 mozilla/ipc/glue/CrossProcessMutex.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/mozilla/ipc/glue/CrossProcessMutex.h b/mozilla/ipc/glue/CrossProcessMutex.h
index 2d6bb2a..6820e46 100644
--- a/mozilla/ipc/glue/CrossProcessMutex.h
+++ b/mozilla/ipc/glue/CrossProcessMutex.h
@@ -9,7 +9,7 @@
 #include "base/process.h"
 #include "mozilla/Mutex.h"
 
-#if defined(OS_LINUX) || defined(XP_DARWIN)
+#if defined(OS_LINUX) || defined(XP_DARWIN) || defined(OS_BSD) || defined(OS_HURD)
 #include <pthread.h>
 #include "SharedMemoryBasic.h"
 #include "mozilla/Atomics.h"
@@ -34,7 +34,7 @@ struct ParamTraits;
 namespace mozilla {
 #if defined(OS_WIN)
 typedef HANDLE CrossProcessMutexHandle;
-#elif defined(OS_LINUX) || defined(OS_MACOSX)
+#elif defined(OS_LINUX) || defined(OS_MACOSX) || defined(OS_BSD) || defined(OS_HURD)
 typedef mozilla::ipc::SharedMemoryBasic::Handle CrossProcessMutexHandle;
 #else
 // Stub for other platforms. We can't use uintptr_t here since different
@@ -100,7 +100,7 @@ private:
 
 #if defined(OS_WIN)
   HANDLE mMutex;
-#elif defined(OS_LINUX) || defined(OS_MACOSX)
+#elif defined(OS_LINUX) || defined(OS_MACOSX) || defined(OS_BSD) || defined(OS_HURD)
   RefPtr<mozilla::ipc::SharedMemoryBasic> mSharedBuffer;
   pthread_mutex_t* mMutex;
   mozilla::Atomic<int32_t>* mCount;
